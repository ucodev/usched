{"name":"uSched","tagline":"A remote command-line scheduler with an almost-natural language interpreter.","body":"## Summary \r\n\r\nA free and open source command-line scheduler with an almost-natural language interpreter, delivering remote management and an intuitive programming interface for multiple programming languages.\r\n\r\n\r\n\r\n## Description\r\n\r\nuSched services provide an interface to schedule commands to be executed at a particular time, optionally repeating them over a specified interval, and optionally stopping them at any other particular time.\r\n\r\nIt provides a simple and intuitive natural language that is intepreted via a command line client, but can also be integrated into any programming language through its client libraries and bindings.\r\n\r\nIt also operates as a **client/server**, where requests performed by clients can affect local or remote machines where uSched services are running.\r\n\r\n\r\n\r\n## Portability\r\n\r\nuSched is designed to be compliant with any POSIX-oriented operating system. It was successfully tested under **Linux**, **FreeBSD**, **OpenBSD**, **SunOS**, **Minix**, **Darwin** and others, in different architectures (**x86/64**, **ARM** and **SPARC**).\r\n\r\nThere are some features that may not be enabled by default in the case that some non-portable calls being unavailable on the target operating system, such as chroot(). To disable such calls and features, set the CONFIG_POSIX_STRICT definition to 1 in the [include/config.h](https://github.com/ucodev/usched/blob/master/include/config.h) file.\r\n\r\nuSched client will compile on most Windows versions and the API bindings are available for C#.\r\n\r\n\r\n\r\n## Installation\r\n\r\nPerform the following commands:\r\n\r\n      ~# cd /usr/src\r\n      ~# mkdir usched\r\n      ~# wget https://github.com/ucodev/usched/archive/v0.1-beta-06.tar.gz\r\n      ~# tar zxvf master.tar.gz -C usched\r\n      ~# cd usched\r\n      ~# ./deploy\r\n\r\nor see [INSTALL.txt](https://github.com/ucodev/usched/blob/master/doc/text/INSTALL.txt)\r\n\r\n\r\n\r\n## Command-Line Usage Examples\r\n\r\nRun the do_backups.sh script at 23:00 and then run it every 24 hours:\r\n\r\n      ~$ usc run '/usr/local/bin/do_backups.sh' on hour 23 then every 24 hours\r\n\r\n\r\nDump 'df -h' output into /tmp/disk_stats.log after 10 minutes of running this command, and run it again every 30 minutes:\r\n\r\n      ~$ usc run '/bin/df -h >> /tmp/disk_stats.log' in 10 minutes then every 30 minutes\r\n\r\n\r\nRun the command 'sync' now, repeat every 45 seconds and stop when the time is 12:00:\r\n\r\n      ~$ usc run '/bin/sync' now then every 45 seconds until to time '12:00:00'\r\n\r\n\r\nSend a some sort of notification in 30 minutes:\r\n\r\n      ~$ usc run '/usr/local/bin/notify.sh something' in 30 minutes\r\n\r\n\r\nCapture network traffic on interface eth0 between 8:00 and 18:00, every day:\r\n\r\n      ~# usc run 'tcpdump -i eth0 -w /tmp/traffic_`date +%Y%m%d`.dump' on hour 8 every 1 day\r\n      ~# usc run 'killall tcpdump' on hour 18 every 1 day\r\n\r\n\r\nPerform a request on a remote machine running uSched:\r\n\r\n      ~$ usc -H remote.example.com -U username run '/usr/local/bin/do_something.sh' on time 11:00:00\r\n      Password:\r\n      ~$\r\n\r\n\r\nShow all scheduled entries for the user by running the following command:\r\n\r\n      ~$ usc show all\r\n\r\n\r\nStop all scheduled entries for the user by running the following command:\r\n\r\n      ~$ usc stop all\r\n\r\n\r\n\r\n## Documentation\r\n\r\nUseful documentation links:\r\n\r\n  * [GitHub uSched Wiki](https://github.com/ucodev/usched/wiki) - The official uSched project wiki\r\n  * [uSched FAQ](https://github.com/ucodev/usched/wiki/FAQ) - Frequently Asked Questions\r\n  * [Getting Help](https://github.com/ucodev/usched/wiki#getting-help) - How to get help installing, configuring and using the project\r\n\r\nReference Manual:\r\n\r\n  * [HTML](http://doc.usched.org/uSched_Reference_Manual.html) format\r\n  * [PDF](http://doc.usched.org/uSched_Reference_Manual.pdf) format\r\n\r\nOverview manual page:\r\n\r\n      usched(7)\r\n\r\nCommand-line manual pages:\r\n\r\n      usched(1), usa(1), usc(1), usd(1), use(1), usm(1)\r\n\r\nProgrammer's manual pages:\r\n\r\n      usched_destroy(3), usched_init(3),\r\n      usched_opt_set_remote_hostname(3), usched_opt_set_remote_port(3)\r\n      usched_opt_set_remote_username(3), usched_opt_set_remote_password(3),\r\n      usched_request(3),\r\n      usched_result_free_run(3),\r\n      usched_result_free_show(3),\r\n      usched_result_free_stop(3),\r\n      usched_result_get_run(3),\r\n      usched_result_get_show(3),\r\n      usched_result_get_stop(3),\r\n      usched_usage_error(3), usched_usage_error_str(3)\r\n\r\nGenerate Doxygen HTML files (into doc/doxygen/doxyfiles/):\r\n\r\n      ~$ make doxygen\r\n\r\nBrief installation guide:\r\n\r\n  * [INSTALL.txt](https://github.com/ucodev/usched/blob/master/doc/text/INSTALL.txt)\r\n\r\n\r\n\r\n## Library Usage Examples\r\n\r\nSee [example/](https://github.com/ucodev/usched/tree/master/example) directory for library usage examples in C, C#, Java, PHP, Python and more yet to come. The following sections illustrate some code snippets for some of the supported programming languages.\r\n\r\n### C\r\n\r\n      #include <usched/lib.h>\r\n      \r\n      int main(void) {\r\n          usched_init();\r\n          \r\n          /* Optional remote parameters. Not required for localhost requests */\r\n          usched_opt_set_remote_hostname(\"remote.usched.example.com\");\r\n          usched_opt_set_remote_port(\"7600\");\r\n          usched_opt_set_remote_username(\"username\");\r\n          usched_opt_set_remote_password(\"password\");\r\n          \r\n          /* Perform the request */\r\n          usched_request(\"run \\'df -h >> /tmp/disk.txt\\' now then every 30 seconds\");\r\n          \r\n          usched_result_free_run();\r\n          \r\n          usched_destroy();\r\n          \r\n          return 0;\r\n      }\r\n\r\n### Csharp\r\n\r\n      using UschedAPI;\r\n\r\n      namespace UschedExample {\r\n          class Program {\r\n              public static void Main(string[] args) {\r\n                  Usched usc = new Usched();\r\n                  \r\n                  /* Optional remote parameters. Not required for localhost requests */\r\n                  usc.SetHostname(\"remote.usched.example.com\");\r\n                  usc.SetPort(\"7600\");\r\n                  usc.SetUsername(\"username\");\r\n                  usc.SetPassword(\"password\");\r\n                  \r\n                  /* Perform the request */\r\n                  usc.Request(\"run 'df -h >> /tmp/disk.txt' now then every 30 seconds\");\r\n              }\r\n          }\r\n      }\r\n\r\n### Java\r\n\r\n      class UschedExample {\r\n          public static void main(String[] args) {\r\n              Usched usc = new Usched();\r\n              \r\n              /* Optional remote parameters. Not required for localhost requests */\r\n              usc.SetHostname(\"remote.usched.example.com\");\r\n              usc.SetPort(\"7600\");\r\n              usc.SetUsername(\"username\");\r\n              usc.SetPassword(\"password\");\r\n              \r\n              /* Perform the request */\r\n              usc.Request(\"run 'df -h >> /tmp/disk.txt' now then every 30 seconds\");\r\n          }\r\n      }\r\n\r\n### PHP\r\n\r\n      include(\"usched.php\");\r\n      \r\n      $usc = new Usched();\r\n      \r\n      /* Optional remote parameters. Not required for localhost requests */\r\n      $usc->SetHostname(\"remote.usched.example.com\");\r\n      $usc->SetPort(\"7600\");\r\n      $usc->SetUsername(\"username\");\r\n      $usc->SetPassword(\"password\");\r\n      \r\n      /* Perform the request */\r\n      $usc->Request(\"run 'df -h >> /tmp/disk.txt' now then every 30 seconds\");\r\n\r\n### Python\r\n\r\n      from usched import *\r\n      \r\n      usc = Usched()\r\n      \r\n      /* Optional remote parameters. Not required for localhost requests */\r\n      usc.SetHostname(\"remote.usched.example.com\");\r\n      usc.SetPort(\"7600\");\r\n      usc.SetUsername(\"username\");\r\n      usc.SetPassword(\"password\");\r\n      \r\n      /* Perform the request */\r\n      usc.Request(\"run 'df -h >> /tmp/disk.txt' now then every 30 seconds\")\r\n\r\n\r\n\r\n## License\r\n\r\nuSched is licensed under the [GNU General Public License version 3](https://www.gnu.org/copyleft/gpl.html).\r\n\r\n\r\n\r\n## Contributing\r\n\r\nThe best way to do it is through GitHub. Clone it, fork it, change it and improved it. Then check the [project wiki](https://github.com/ucodev/usched/wiki) for details regarding the submission of contributions.\r\n\r\n\r\n\r\n## Notes\r\n\r\n* Tree version v0.1 of the project is on an **beta stage** and shall not be used beyond testing purposes.\r\n* Tree version v0.2 is **under development** and may not be fully functional.\r\n\r\n","google":"UA-60868614-1","note":"Don't delete this file! It's used internally to help with page regeneration."}